package Scripts;


/*	Problem 2 :
 * 
 * Each new term in the Fibonacci sequence is generated by adding the previous two terms. 
 * By starting with 1 and 2, the first 10 terms will be:
 *
 * 1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...
 *	
 * By considering the terms in the Fibonacci sequence whose values do not exceed four million, 
 * find the sum of the even-valued terms.
 * 
 * 
 * Strategy : 
 * 
 * Bounds : 
 * Terms that do not exceed 4 millions 
 * Only consider even values terms
 * 
 * Keep sum and two numbers. 
 * generate new number : if greater than 4 millions stop program, if even, add to sum 
 * 
 */


public class Problem2 {

	public static void main(String[] args)
	{
		
		int testAnswer = sumEvenFibonacci(1, 2, 4000000);
		// should be 44
		
		System.out.println(testAnswer);
		
	}
	
	
	
	private static int sumEvenFibonacci(int firstNumber, int secondNumber, int maxNumber)
	{
		int sum = 0;
		
		if (firstNumber % 2 == 0)
		{
			sum = sum + firstNumber;
		}
		
		if (secondNumber % 2 == 0)
		{
			sum = sum + secondNumber;
		}
		
		for (int currentNumber = firstNumber + secondNumber; currentNumber <= maxNumber ; currentNumber = firstNumber + secondNumber)
		{
				
			if (currentNumber % 2 == 0) // Add currentNumber to sum if even
			{
				sum = sum + currentNumber;
			}
			
			firstNumber = secondNumber; 
			secondNumber = currentNumber;
			
		}

		return sum;
	}
	
	
	
	
	
	
	
	
}
